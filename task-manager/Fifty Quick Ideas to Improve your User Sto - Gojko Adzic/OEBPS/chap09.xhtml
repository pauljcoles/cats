<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title dir="ltr">Put a ‘best before’ date on stories</title>
<link href="stylesheet.css" type="text/css" rel="stylesheet" />
<meta charset="utf-8"/>
</head>
<body dir="ltr">
<div>
<h2 id="idea-best-before">Put a ‘best before’ date on stories</h2>


<figure class="image center">
  <img src="images/mobi----best_before_2.jpg" alt="" />
  <figcaption></figcaption>
</figure>


<p>Handing time-constrained changes is one of the major challenges of planning with
flexible scope. This is often a blind spot for teams working with user stories,
especially if they have many stakeholders. Time-bound items might start as low
priority, but as the deadline approaches they become more critical. When time
constraints are not clearly specified, such items are difficult to spot and
manage until they become emergencies.</p>

<p>A team we recently worked with had to implement several new reports to support
an upcoming change in regulations. The financial controller asked for them about
six months ahead of the deadline, but as other things were always more
important, the reports never got to the top of the list. A week before the
regulation change, the financial controller panicked and the whole team went
into fire-fighting mode. Another stakeholder caused something similar two weeks
later. Looking at their planned and actual work over the previous six months, we
discovered many similar cases. The team felt that the business stakeholders
changed priorities randomly, which was causing almost constant firefighting.
The business stakeholders felt that the team was not productive enough, and that
they did not care about business priorities. The issue was, as in most similar
cases, not with incompetence on either side but with communication.</p>

<p>Instead of blindly accepting stories into the backlog and forgetting about them
until a stakeholder screams, the team started to investigate timing constraints
early on. When proposing a story, a stakeholder would have to specify the ‘best
before’ date as well. This was effectively a signal that the work required by
that story would become an emergency one week before the date. Stories with
expiry dates were clearly separated from the rest of the backlog, which allowed
the team to slot in such stories into earlier iterations, dealing with them at a
sustainable pace. Some stakeholders realised that this was an easy way to cheat
the system and get higher priority for their needs, so the scheduling system was
slightly adjusted to prohibit ‘rotten fruit’ – stories which would expire
almost immediately.</p>

<p>One of the biggest benefits of working with user stories is allowing
stakeholders to frequently change priorities and adjust scope. But this
shouldn’t be used as an excuse to ignore known time constraints, which will only
lead to a lot of fire-fighting later. Flexible scope is great when you need to
react quickly, but frequent fire-fighting is unsustainable. When a team is
reacting to an emergency, other work suffers and quick and dirty changes cause a
lot of technical debt. In most cases that we’ve seen, someone knew about the
upcoming deadline months in advance, but this was not clearly communicated.
There really is no reason for such stories to become so critical as to cause an
emergency. They can be handled at a sustainable pace.</p>

<p>In order to avoid unnecessary pressure and self-inflicted emergencies, check
whether there is an expiry date when new user stories are proposed. Write down
the best before date on those stories and make it visually obvious that they are
special so that you can manage them separately.</p>

<h3 id="leanpub-auto-key-benefits-7">Key benefits</h3>

<p>A clear expiry date allows teams to manage time-constrained stories before they
become urgent. This reduces emergencies, context switching, technical debt and
allows the teams to handle real emergencies more effectively.</p>

<p>Sooner or later, your delivery team will have a genuine emergency to deal with:
a story that must be implemented straight away. An urgent story is like an
ambulance in a traffic jam. Turning on a siren and rushing through only works if
most of the cars on the road are not ambulances as well. Making sure everyone is
aware of deadlines and works to them removes most of the noise and lets the team
deal with genuine emergencies better.</p>

<h3 id="leanpub-auto-how-to-make-it-work-7">How to make it work</h3>

<p>The most important action is to ask about potential deadlines and clearly
specify them when items come into the plan. It is also a very good idea to mark
those items visually so that they can be identified quickly. Kanban popularised
delivery plans with several classes of service, where different types of work
can be assigned different service levels. If you are using a flow-based process,
it might be a good idea to create a separate lane on your board for fixed-date
items, so you can clearly monitor them. Other effective ways of separating out
fixed-date items are using different shaped or coloured cards, or having a
calendar next to the planning board and fixing items onto the calendar several
weeks before the deadline.</p>

<p>Generally, it is a good idea to require that stakeholders propose
time-constrained stories a certain length of time before the deadline, much in
the way that airplane companies require passengers to check in at least 30
minutes before their flight. For example, agree on a service level where a best
before date has to be at least one month after the date when a story is
initially proposed. This stops the ‘rotten fruit’ stories from coming into the
backlog.</p>

<p>Don’t aim to put a best before date on all stories, otherwise everything can
become an emergency. Keep this only for stories with a genuine timing
constraint, so you can manage them differently from the others. Teams with many
stakeholders will probably find it useful to limit the number of stories with an
expiry date, either as a percentage of the active backlog or the total number.</p>

<p>If you use impact maps, put time constraints on higher-level impacts instead of
individual stories. This will help with prioritisation of impacts, but also with
managing entire groups of related stories.</p>


</div>
</body>
</html>
