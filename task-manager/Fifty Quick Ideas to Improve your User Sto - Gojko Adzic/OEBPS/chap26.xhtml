<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title dir="ltr">Involve all roles in the discussion</title>
<link href="stylesheet.css" type="text/css" rel="stylesheet" />
<meta charset="utf-8"/>
</head>
<body dir="ltr">
<div>
<h2 id="idea-three-amigos">Involve all roles in the discussion</h2>


<figure class="image center">
  <img src="images/mobi----3_amigos.jpg" alt="" />
  <figcaption></figcaption>
</figure>


<p>There are many situations where involving an entire team in story discussions
isn’t practical or useful. For example, it’s extremely difficult to facilitate a
good conversation with 20 people distributed across different continents.
Equally, teams that work on more mature products might not need as much
alignment across the whole group as those working on completely new initiatives.
Finally, some changes simply don’t require the whole group to look at them. If
you’re just changing a button from blue to yellow, it’s unwise to use the time
of 20 people discussing the exact shade of yellow.</p>

<p>A common mistake in this situation is to delegate the task of analysing a story
to just one person. Instead, create small conversations that involve at least
one person representing each of the development, testing and analysis roles. A
common name for such conversations, which Gojko used also in <a href="http://www.amazon.com/gp/product/1617290084/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=1617290084&amp;linkCode=as2&amp;tag=swingwiki-20&amp;linkId=KUEIB3JXRS5B6QML"><em>Specification by
Example</em></a>,
is <em>three amigos</em>. Janet Gregory and Lisa Crispin call this idea <em>The Power Of
Three</em> in <a href="http://www.amazon.com/gp/product/0321534468/ref=as_li_tl?ie=UTF8&amp;camp=1789&amp;creative=390957&amp;creativeASIN=0321534468&amp;linkCode=as2&amp;tag=swingwiki-20&amp;linkId=ML6FOBZCODA6VV6H"><em>Agile
Testing</em></a>.</p>

<p>Don’t get stuck on the number three, though. We’ve worked with teams where the
database administrator had to be present in all discussions, or where a business
domain expert and business analyst were different roles and they both needed to
contribute. Four or five amigos is fine, as long as all the relevant roles are
represented.</p>

<p>The typical way to run a three-amigo meeting is to start with the analyst or
business representative introducing a story and presenting a few initial
scenarios of how they would see a story working. Then the developer considers
the story in the context of the existing infrastructure and probes for potential
functional gaps and inconsistencies. The tester then considers how the story
might be tested and applies testing heuristics to identify scenarios that the
others have not considered. The discussion continues until everyone is happy
that they have enough information to start working and that all major risks have
been covered.</p>

<p>Three-amigo conversations are best with a flipchart or a whiteboard, but they
can also be very effective around a monitor, or even using screen-sharing
remotely. If you organise conversations with a flipchart, one of the three
amigos is responsible for writing up the results of the conversation and sharing
them with the rest of the team. When three-amigo conversations take place around
a monitor or using remote screen-sharing, the participants can directly write up
the meeting notes instead of collecting them first on a flipchart and converting
to digital form later.</p>

<h3 id="leanpub-auto-key-benefits-22">Key benefits</h3>

<p>Smaller discussions are often faster and require a lot less facilitation and
organisational overhead. People are more engaged in smaller groups, and having
all roles represented ensures that all the perspectives get covered.</p>

<p>It’s also easier to organise an effective remote three-amigos discussion than a
remote full-team discussion. Sharing screens or video-conferencing actually
works quite well in such situations. That’s why the three-amigo discussion is a
particularly effective method for distributed teams.</p>

<h3 id="leanpub-auto-how-to-make-it-work-22">How to make it work</h3>

<p>Make sure to involve people who will actually work on delivering the story. A
common mistake teams make is to delegate the three-amigos analysis to whoever
has time, so the people who actually end up delivering the software do not
participate in the discussions. This creates problems for knowledge transfer:
special cases have to be discussed all over again during iteration planning, and
a lot of questions have to be answered again. To avoid this problem, try to
divide the work upfront and then involve the people who will actually work on
delivering and testing a story in the analysis.</p>

<p>It’s important to recognise when the entire team needs to know about some
important decision or participate in a discussion. If the three amigos end up
discussing a major impact on the current architecture or some globally
significant feature change, then it might be worth pausing the smaller
discussion and continuing in a larger group with the whole team.</p>

<p>In contexts where most stories require a lot of coordination with business
stakeholders or third party teams, it is wise to schedule story discussions
about one cycle ahead. For example, shortly after the start of an iteration, do
the first-pass analysis on stories for the next iteration. Teams that follow
flow-based processes in such situations often create one queue (or planning
board column) for the three-amigo discussion and a separate queue for confirming
the results of the analysis with external stakeholders.</p>

<p>For teams where one of the roles is a clear bottleneck (for example there is
only one business representative), it’s useful to plan three-amigo conversations
upfront around the availability of that role. For example, each pair of
developers and testers gets a one-hour slot with the business representative
each Monday. Scheduling such meetings ensures that the busiest person can plan
other activities so that there is enough time and availability for collaborative
analysis. Teams where there are no clear bottlenecks can be more flexible and
organise three-amigo conversations whenever people need more information.</p>


</div>
</body>
</html>
