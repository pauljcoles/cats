<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title dir="ltr">Name your milestones</title>
<link href="stylesheet.css" type="text/css" rel="stylesheet" />
<meta charset="utf-8"/>
</head>
<body dir="ltr">
<div>
<h2 id="idea-name-milestones">Name your milestones</h2>


<figure class="image center">
  <img src="images/mobi----milestones.jpg" alt="" />
  <figcaption></figcaption>
</figure>


<p>Planning releases based on business deadlines or milestones is an essential part
of iterative delivery for teams that are not at the level of product and process
maturity to make delivery of individual stories possible. Planning with business
milestones is useful even for teams that can deploy individual stories, because
most product owners need to track progress against business goals that are
typically expressed at a higher level than individual stories. However, teams
rarely devote sufficient time to planning their milestones. Milestones often get
technical or generic names, such as ‘Release 1.1’, ‘Beta’, or ‘MVP’, which makes
it difficult to create effective plans around those milestones.</p>

<p>Identifying stories within business milestones helps connect the work being done
at the coalface with the higher-level objectives and governance of the team’s
stakeholders. To make story selection easier, name milestones with as much care
as you would take for naming stories, or even more. Like a story, a milestone
represents an increment in business value, and clearly articulating the value
that each milestone represents is essential for engaging stakeholders in
practical discussions about the details of what belongs inside or outside the
scope of each milestone.</p>

<p>Rather than using generic names, it is better to name a milestone according to
the capability represented by the set of stories included in it. Name these
milestones as assertions of capability, for example ‘Mobile users can buy
concert tickets’, or ‘PCI compliance satisfied’.</p>

<p>Other styles include the kind of statement you would see on a billboard
advertising your new product version, or a bullet point in a key features list
on the back of a shrink-wrapped product box.</p>

<h3 id="leanpub-auto-key-benefits-17">Key benefits</h3>

<p>Choosing good names for business milestones improves stakeholder engagement with
the story prioritisation process, and supports planning with hierarchical
backlogs. Naming milestones in the early stages of product planning can help to
avoid user story hell, as it encourages teams to identify story details for the
upcoming milestones, but defer the details of stories in later milestones.</p>

<p>Meaningful milestone names make it easier to track overall progress and
communicate priorities and release opportunities to those outside the team.
Stakeholders can make sense of overall product evolution and delivery progress
according to the named milestones that have been achieved and that are still in
progress, without having to go into the details of individual stories.</p>

<p>If stakeholders are concerned about achieving delivery deadlines, they can have
meaningful discussions with the product owner and the team about which stories
are included in the deadline, and whether it makes sense to move whole stories
out of a milestone, or slice them to reduce their size, or identify another
valuable milestone with less functionality.</p>

<h3 id="leanpub-auto-how-to-make-it-work-17">How to make it work</h3>

<p>Don’t confuse milestones with epics. True epics are simply large stories that
satisfy all the other INVEST criteria but are too large to be implemented in a
single iteration. However the term is often used (or misused) to represent the
whole of a subject area or topic, such as ‘reporting’ or ‘dashboard’ or
‘personalisation’. While such topics are useful during early product planning as
a way of identifying areas of functionality a product may have to include, it
can be unhelpful (and plain bad planning) to assume that an epic must be
delivered in its entirety. In any topic there are always more potential features
and stories we can come up with, but when all the stories are ordered by
priority it is rare to see any single epic reach completion before another one
must start.</p>

<p>Milestones, therefore, should describe noteworthy points where a cohesive
product increment could be delivered. Typically that means including stories
that bring improvements in many different areas, providing a balance of features
across your product’s end-to-end capabilities. It can also mean including the
juiciest slices of several epics, leaving the other slices for later milestones.</p>

<p>Start with a very broad division of stories in a backlog into two groups, such
as <em>day 1</em> and <em>later</em>, or <em>simple version</em> and <em>full version</em> or even <em>now</em> and
<em>not now</em>.  Stakeholders often put more into the first group than the second,
but it is better to do the reverse. Subdivide the first group again, but this
time give the new milestone a meaningful name. If there are fewer stories in the
first milestone than after it, you are making progress. Continue this process,
subdividing whichever group has the most stories in it. Stop when it becomes too
hard to give each milestone a good name.</p>

<p>With several named milestones in place, check again what stories are planned for
each milestone. Does every story make a meaningful improvement to its milestone?
If not, move it. The aim is to have as few stories in each milestone as
possible, without creating artificial milestones.</p>

<p>Make this an ongoing process. A story map or product backlog is a living thing
that should always reflect the latest plan, based on all the information the
product owner has available to them at the time.</p>


</div>
</body>
</html>
