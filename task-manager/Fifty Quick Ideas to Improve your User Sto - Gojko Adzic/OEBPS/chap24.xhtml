<?xml version="1.0" encoding="UTF-8"?>
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
<head>
<title dir="ltr">Imagine the demonstration</title>
<link href="stylesheet.css" type="text/css" rel="stylesheet" />
<meta charset="utf-8"/>
</head>
<body dir="ltr">
<div>
<h2 id="idea-imagine-the-demonstration">Imagine the demonstration</h2>


<figure class="image center">
  <img src="images/mobi----imagine_demonstration.jpg" alt="" />
  <figcaption></figcaption>
</figure>


<p>Teams working with user stories show progress through demonstrating working
software regularly, normally at the end of an iteration. There are different
styles of running a demo, with varying degrees of formality and preparation. At
one end of the scale (let’s call it the <em>wrong</em> end) there is no demo at all and
no other activity. Close to this is some sort of roll-call of stories or tasks
completed, perhaps by reference to a report in a task-tracking tool or a
burn-down chart, without any actual demo of working software. Around the middle
of the scale is the common practice of having developers or testers in the team
do an off-the-cuff walkthrough of each story for the benefit of the product
owner, who might be seeing the finished results for the first time. Further
along the scale, the demo is based on prepared examples that have been tested
before the event.</p>

<p>At the <em>right</em> end of the scale, the team regard the demo as an important event,
it is open to a wider audience, and senior stakeholders have the time regularly
scheduled in their diaries. The team know it is a high-stakes moment, and
therefore the demo is well prepared and rehearsed. The product owner does the
demo, already familiar with all the completed stories. They introduce each story
by reference to the business value it brings, demonstrate it using well-chosen,
compelling and illustrative example scenarios that give the audience quick
understanding of what it does, and confidence in the robustness and completeness
of the implementation. The demo may also make reference to acceptance criteria
for each story.</p>

<p>At this ideal end of the scale, the end-of-iteration demo is a slick production.
Whether or not your team actually achieves this nirvana, starting with this goal
for each iteration forces a virtuous chain of dependencies that will help the
team succeed. It requires a clear idea of what will make each story ‘sing’,
which requires time for the product owner to rehearse a good demo of each story,
which requires that the story is completed and thoroughly tested before the end
of the iteration.</p>

<p>The quick idea is this: when the team is discussing a story, in the context of
understanding the acceptance criteria or exploring key examples, start by asking
the question, ‘<em>How will we demonstrate this story?</em>’</p>

<p>This simple act of thinking ahead to a time in the (near) future when the story
is complete focuses the minds of all present upon a shared vision of the demo
scenarios. This allows the team to pull the required functionality from a common
understanding of the end goal.</p>

<h3 id="leanpub-auto-key-benefits-20">Key benefits</h3>

<p>The demo event is important for many reasons, beyond just the basic agile
principle of measuring progress through working software. An end-of iteration
review can be an important morale booster for the team, who can reflect upon
their achievements and celebrate their success. It encourages the principle of
flow, so team members focus on completing whole stories in priority order rather
than having many in progress. The delivery team can stop starting and start
finishing. The demo gives stakeholders outside the team a very tangible sense of
the real state of the product, and it is an opportunity for them to give
valuable feedback to the team.</p>

<p>During planning, thinking ahead to demonstrating the story makes the team focus
on what can be achieved in the (inevitably short) period between now and that
big moment. This can encourage splitting larger stories in order to focus on the
most valuable core. It ensures that the product owner can articulate the
business value. It leads to identifying the outputs. It encourages debate about
interesting examples versus less interesting ones.</p>

<p>From the product owner’s perspective, having a coherent answer to the question
‘How will we demonstrate this?’ ensures that there is a common understanding of
the acceptance criteria for the story, before the team commits to it. It can
serve as the draft script for the actual demo, and details can be added or
embellished as the story takes shape. It gives a starting point for testers on
which to base acceptance test design as well as sparking ideas for exploratory
testing.</p>

<h3 id="leanpub-auto-how-to-make-it-work-20">How to make it work</h3>

<p>The ideal demo described earlier does not have to be your starting point.
Whatever you are doing now at the end of each iteration, your aim is to nudge
your team a little closer to the right end of the scale each time.</p>

<p>The first simple step is to encourage or reinforce your team’s commitment to the
idea of the demo as the proof of their efforts, the measure of real progress,
the moment of truth, the closing ceremony of the iteration. Make a big deal of
it. Bring food. Make it feel like the celebration that it should be.</p>

<p>As you get better at demos for the team, invite more external stakeholders to
attend. Ask for feedback, invite questions and comments. Mention upcoming
stories that they may be interested in seeing at the next demo.</p>

<p>When the team first gets together to discuss a story and answers the question
‘How will we demonstrate this story?’ make sure you let the testers riff off the
answer. That way they will come up with better examples, more interesting
details, more discussion-provoking edge cases.</p>

<p>Take the answer seriously, and when it comes to the end of the iteration,
demonstrate the story the way you said you would.</p>


</div>
</body>
</html>
